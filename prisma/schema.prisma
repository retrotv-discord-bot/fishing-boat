// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./fishing-vessel.db"
}

model Vessels {
  id                  String          @map("ID") @id
  name                String          @map("NAME")
  channelId           String          @map("CHANNEL_ID")
  capacity            Int             @map("CAPACITY")
  description         String          @map("DESCRIPTION")
  createdAt           DateTime        @map("CREATED_AT") @default(now())
  canMidParticipation String          @map("CAN_MID_PARTICIPATION")
  crews               VesselsCrews[]
  alarm               Alarms?

  @@map("VESSELS")
}

model Crews {
  id          String @id @map("ID")
  name        String @map("NAME")
  globalName  String @map("GLOBAL_NAME")
  vessels     VesselsCrews[]

  @@map("CREWS")
}

model VesselsCrews {
  vesselId  String  @map("VESSEL_ID")
  crewId    String  @map("CREW_ID")
  position  String  @map("POSITION")

  vessel    Vessels @relation(fields: [vesselId], references: [id], onDelete: Cascade)
  crew      Crews   @relation(fields: [crewId], references: [id])

  @@id([vesselId, crewId])
  @@map("VESSELS_CREWS")
}

model Alarms {
  vesselId  String  @map("VESSEL_ID") @unique
  alarmTime String  @map("ALARM_TIME")
  use       String  @map("USE") @default("Y")
  vessel    Vessels @relation(fields: [vesselId], references: [id], onDelete: Cascade)

  @@id([vesselId, alarmTime])
  @@map("ALARMS")
}
